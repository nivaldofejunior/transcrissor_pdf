[project]
name = "transcrissor-pdf"
version = "0.1.0"
description = ""
authors = [{ name = "Nivaldo Ferreira de Souza Junior", email = "nivaldofe.jr@gmail.com" }]
package-mode = false
requires-python = ">=3.12,<4.0"

dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "motor (>=3.7.1,<4.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "pydantic (>=2.11.7,<3.0.0)",
    "aiofiles (>=24.1.0,<25.0.0)",
    "pymupdf (>=1.26.3,<2.0.0)",
    "gtts (>=2.5.4,<3.0.0)",
    "python-multipart (>=0.0.20,<0.0.21)",
    "pydub (>=0.25.1,<0.26.0)",
    "celery (>=5.5.3,<6.0.0)",
    "edge-tts (>=7.2.0,<8.0.0)",
    "google-cloud-texttospeech (>=2.27.0,<3.0.0)",
    "google-generativeai (>=0.8.5,<0.9.0)",
    "redis (>=6.4.0,<7.0.0)",
    "sse-starlette (>=3.0.2,<4.0.0)",
    "bcrypt (>=4.3.0,<5.0.0)",
    "python-jose[cryptography] (>=3.5.0,<4.0.0)",
    "email-validator (>=2.2.0,<3.0.0)"
]

[tool.poetry]
name = "transcrissor-pdf"
version = "0.1.0"
description = ""
authors = ["Nivaldo Ferreira de Souza Junior <nivaldofe.jr@gmail.com>"]
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
fastapi = ">=0.116.1,<0.117.0"
uvicorn = ">=0.35.0,<0.36.0"
motor = ">=3.7.1,<4.0.0"
python-dotenv = ">=1.1.1,<2.0.0"
pydantic = ">=2.11.7,<3.0.0"
aiofiles = ">=24.1.0,<25.0.0"
pymupdf = ">=1.26.3,<2.0.0"
gtts = ">=2.5.4,<3.0.0"
python-multipart = ">=0.0.20,<0.0.21"
pydub = ">=0.25.1,<0.26.0"
celery = ">=5.5.3,<6.0.0"
edge-tts = ">=7.2.0,<8.0.0"
google-cloud-texttospeech = ">=2.27.0,<3.0.0"
google-generativeai = ">=0.8.5,<0.9.0"
redis = ">=6.4.0,<7.0.0"
sse-starlette = ">=3.0.2,<4.0.0"
bcrypt = ">=4.3.0,<5.0.0"
python-jose = { version = ">=3.5.0,<4.0.0", extras = ["cryptography"] }
email-validator = ">=2.2.0,<3.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
taskipy = "^1.14.1"
ruff = "^0.12.8"
mypy = "^1.17.1"
httpx = "^0.28.1"

[tool.taskipy.tasks]
# ðŸ”¥ Dev server
dev = "uvicorn app.main:app --reload --port 8001"

# ðŸš€ Servidor 'prod' simples (ajuste workers conforme)
run = "poetry run uvicorn app.main:app --host 0.0.0.0 --port 8001"

# ðŸ§ª Testes
test = "pytest -q"

# âœ… Lint / Format
lint = "ruff check ."
fmt = "ruff format . && ruff check --fix ."

# ðŸ§  Type-check
types = "mypy app --ignore-missing-imports"

# ðŸ“¦ Exportar requirements (se precisar pro Docker)
reqs = "poetry export -f requirements.txt -o requirements.txt --without-hashes"

# ðŸ‘¤ Seed (cria usuÃ¡rio via /register)
seed = "python scripts/seed_user.py"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
